{"ast":null,"code":"var _jsxFileName = \"/Users/sonja/Documents/summer/reactNotes/notes/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [selectedNote, setSelectedNote] = useState(null);\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3002/api/notes\");\n        const notes = await response.json();\n        setNotes(notes);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchNotes();\n  }, []);\n  const handleAddNote = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:3002/api/notes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title,\n          content\n        })\n      });\n      const newNote = await response.json();\n      setNotes([newNote, ...notes]);\n      setTitle(\"\");\n      setContent(\"\");\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const handleNoteClick = note => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n  const handleUpdateNote = async event => {\n    event.preventDefault();\n    if (!selectedNote) {\n      return;\n    }\n    console.log(selectedNote.id);\n    try {\n      const response = await fetch(\"http://localhost:3002/api/notes/${selectedNote.id}\", {\n        method: 'PUT',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title,\n          content\n        })\n      });\n      console.log(\"hi\");\n      const updatedNote = await response.json();\n      const updatedNotesList = notes.map(note => note.id === selectedNote.id ? updatedNote : note);\n      setNotes(updatedNotesList);\n      setTitle(\"\");\n      setContent(\"\");\n      setSelectedNote(null);\n    } catch (e) {\n      console.log(\"hi\");\n      console.log(e);\n    }\n  };\n  const handleCancel = () => {\n    setTitle(\"\");\n    setContent(\"\");\n    setSelectedNote(null);\n  };\n  const deleteNote = async (event, noteId) => {\n    event.stopPropagation();\n    try {\n      await fetch(\"http://localhost:3002/api/notes/${noteId}\", {\n        method: \"DELETE\"\n      });\n      const updatedNotes = notes.filter(note => note.id != noteId);\n      setNotes(updatedNotes);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"note-form\",\n      onSubmit: event => selectedNote ? handleUpdateNote(event) : handleAddNote(event),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: event => setTitle(event.target.value),\n        placeholder: \"title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: event => setContent(event.target.value),\n        placeholder: \"content\",\n        rows: 10,\n        required: true,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), selectedNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 12\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"add note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-grid\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-item\",\n        onClick: () => handleNoteClick(note),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => deleteNote(event, note.id),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"VB1fkClPu3jlvzuJZF8O8L7W3ug=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","notes","setNotes","title","setTitle","content","setContent","selectedNote","setSelectedNote","fetchNotes","response","fetch","json","e","console","log","handleAddNote","event","preventDefault","method","headers","body","JSON","stringify","newNote","handleNoteClick","note","handleUpdateNote","id","updatedNote","updatedNotesList","map","handleCancel","deleteNote","noteId","stopPropagation","updatedNotes","filter","className","children","onSubmit","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","rows","type","onClick","_c","$RefreshReg$"],"sources":["/Users/sonja/Documents/summer/reactNotes/notes/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport './App.css';\n\ntype Note = {\n  id: number;\n  title: string;\n  content: string;\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState<Note[]>([]);\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [selectedNote, setSelectedNote] = useState<Note|null>(null);\n  \n  useEffect(()=>{\n    const fetchNotes = async()=>{\n      try {\n        const response = await fetch(\"http://localhost:3002/api/notes\");\n        const notes :Note[] = await response.json();\n        setNotes(notes)\n      } catch (e) {\n          console.log(e);\n      }\n    }\n    fetchNotes();\n  },[])\n\n  const handleAddNote = async (event: React.FormEvent) => {\n    event.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:3002/api/notes\",{\n        method: \"POST\",\n        headers:{\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title,\n          content\n        }),\n      });\n      const newNote = await response.json();\n      setNotes([newNote,...notes]);\n      setTitle(\"\");\n      setContent(\"\");\n    } catch (e) {\n      console.log(e);\n    }\n    \n  };\n\n  const handleNoteClick = (note:Note) => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  }\n\n  const handleUpdateNote = async (event: React.FormEvent) => {\n    event.preventDefault();\n    \n    if(!selectedNote){\n      return;\n    }\n    console.log(selectedNote.id);\n    try {\n      const response = await fetch(\"http://localhost:3002/api/notes/${selectedNote.id}\", {\n        method: 'PUT',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title,\n          content,\n        })\n      });\n      console.log(\"hi\");\n      \n      const updatedNote = await response.json();\n      const updatedNotesList = notes.map((note)=> note.id===selectedNote.id ? updatedNote : note)\n      setNotes(updatedNotesList)\n      setTitle(\"\")\n      setContent(\"\")\n      setSelectedNote(null);\n      \n    } catch (e) {\n      console.log(\"hi\");\n      console.log(e);\n    }\n\n  };\n\n  const handleCancel = () => {\n    setTitle(\"\")\n    setContent(\"\")\n    setSelectedNote(null);\n  };\n\n  const deleteNote = async (event: React.MouseEvent, noteId: number) => {\n    event.stopPropagation();\n    try {\n      await fetch(\"http://localhost:3002/api/notes/${noteId}\", {\n        method: \"DELETE\",\n      });\n\n      const updatedNotes = notes.filter((note) => note.id != noteId)\n      setNotes(updatedNotes);\n      \n    } catch (e) {\n      console.log(e);\n    }\n    \n  };\n\n  return(\n    <div className='app-container'>\n      <form className='note-form' onSubmit={(event) => selectedNote ? handleUpdateNote(event) : handleAddNote(event)}>\n        <input value={title} onChange={(event)=> setTitle(event.target.value)} placeholder='title' required></input> \n        <textarea value={content} onChange={(event)=> setContent(event.target.value)} placeholder='content' rows={10} required> </textarea>\n        \n        {selectedNote ? \n          (<div className='edit-buttons'>\n            <button type='submit'>save</button>\n            <button onClick={handleCancel}>cancel</button>\n          </div>) : (<button type='submit'>add note</button>)\n        } \n\n      </form>\n      <div className='note-grid'>\n        {notes.map((note)=>(\n          <div className='note-item' onClick={()=> handleNoteClick(note)}>\n          <div className='note-header'>\n            <button onClick={(event) => deleteNote(event, note.id)}>x</button>\n          </div>\n            <h2>{note.title}</h2>\n            <p>{note.content}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}